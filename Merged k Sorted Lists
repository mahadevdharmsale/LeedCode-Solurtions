 Example 1:

Input: lists = [[1,4,5],[1,3,4],[2,6]]
Output: [1,1,2,3,4,4,5,6]
Explanation: The linked-lists are:
[
  1->4->5,
  1->3->4,
  2->6
]
merging them into one sorted list:
1->1->2->3->4->4->5->6
Example 2:

Input: lists = []
Output: []
Example 3:

Input: lists = [[]]
Output: []

Code:
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    ListNode merge(ListNode l1,ListNode l2)
    {
          ListNode dummy=new ListNode(-1);
        ListNode current=dummy;
        while(l1!=null && l2!=null)
        {
            if(l1.val<l2.val)
            {
                current.next=l1;
                l1=l1.next;
            }
            else
            {
                current.next=l2;
                l2=l2.next;
            }
            current=current.next;
        }
        if(l1!=null)
        {
            current.next=l1;

        }
        if(l2!=null)
        {
            current.next=l2;
        }
        return dummy.next;
    }
    public ListNode mergeKLists(ListNode[] lists) {
        if( lists==null || lists.length==0)
        {
            return null;
        }
        ListNode dummy=new ListNode(Integer.MIN_VALUE);
        ListNode current=dummy;
        for(int i=0;i<lists.length;i++)
        {
            current=merge(current,lists[i]);
        }
        return dummy.next;
    }
}
